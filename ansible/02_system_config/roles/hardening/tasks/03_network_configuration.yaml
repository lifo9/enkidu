- name: 3.5.1.1 Ensure ufw is installed
  ansible.builtin.apt:
    name: ufw
    state: present

- name: 3.1.1 Disable IPv6
  block:
    - name: 3.1.1 Disable IPv6 - change /etc/default/grub to disable IPv6
      ansible.builtin.replace:
        dest: /etc/default/grub
        regexp: '^(GRUB_CMDLINE_LINUX=(?!.*ipv6.disable)\"[^\"]*)(\".*)'
        replace: '\1 ipv6.disable=1\2'
      notify: Update GRUB
    - name: 3.1.1 Disable IPv6 - Disable ipv6 ufw policies
      ansible.builtin.replace:
        path: /etc/default/ufw
        regexp: "^(IPV6=yes)"
        replace: "IPV6=no"
    - name: 3.1.1 Disable IPv6 - change sysctl
      ansible.posix.sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        sysctl_set: true
        state: present
        reload: true
        ignoreerrors: true
      loop:
        - { name: net.ipv6.conf.all.disable_ipv6, value: 1 }
        - { name: net.ipv6.conf.default.disable_ipv6, value: 1 }
        - { name: net.ipv6.route.flush, value: 1 }

- name: 3.2.1 Ensure packet redirect sending is disabled | set
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: true
    state: present
    reload: true
  loop:
    - { name: net.ipv4.conf.all.send_redirects, value: 0 }
    - { name: net.ipv4.conf.default.send_redirects, value: 0 }

- name: 3.2.2 Ensure IP forwarding is disabled
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "0"
    state: present
    reload: true

- name: 3.3.1 Ensure source routed packets are not accepted | ipv4"
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: true
    state: present
    reload: true
  loop:
    - { name: net.ipv4.conf.all.accept_source_route, value: 0 }
    - { name: net.ipv4.conf.default.accept_source_route, value: 0 }

- name: 3.3.2 Ensure ICMP redirects are not accepted | ipv4"
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: true
    state: present
    reload: true
  loop:
    - { name: net.ipv4.conf.all.accept_redirects, value: 0 }
    - { name: net.ipv4.conf.default.accept_redirects, value: 0 }

- name: 3.3.3 Ensure secure ICMP redirects are not accepted
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: true
    state: present
    reload: true
    ignoreerrors: true
  loop:
    - { name: net.ipv4.conf.all.secure_redirects, value: 0 }
    - { name: net.ipv4.conf.default.secure_redirects, value: 0 }

- name: 3.3.5 Ensure broadcast ICMP requests are ignored
  ansible.posix.sysctl:
    name: net.ipv4.icmp_echo_ignore_broadcasts
    value: "1"
    state: present
    reload: true

- name: 3.3.6 Ensure bogus ICMP responses are ignored
  ansible.posix.sysctl:
    name: net.ipv4.icmp_ignore_bogus_error_responses
    value: "1"
    state: present
    reload: true

- name: 3.3.7 Ensure Reverse Path Filtering is enabled
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: true
    state: present
    reload: true
  loop:
    - { name: net.ipv4.conf.all.rp_filter, value: 1 }
    - { name: net.ipv4.conf.default.rp_filter, value: 1 }

- name: 3.3.8 Ensure TCP SYN Cookies is enabled
  ansible.posix.sysctl:
    name: net.ipv4.tcp_syncookies
    value: "1"
    state: present
    reload: true

- name: 3.5.1.3 Ensure ufw service is enabled
  block:
    - name: 3.5.1.3 Ensure ufw service is enabled
      ansible.builtin.service:
        name: ufw
        state: started
        enabled: true

    - name: 3.5.1.3 Ensure ufw service is enabled | disable ufw before making changes
      community.general.ufw:
        state: disabled

    - name: 3.5.1.3 Ensure ufw service is enabled | Reset any rules previously added to UFW before enable
      ansible.builtin.command: "ufw --force reset"
      changed_when: false

    - name: 3.5.1.3 Ensure ufw service is enabled | allow SSH before enable
      community.general.ufw:
        rule: "{{ item.rule }}"
        port: "{{ item.port }}"
        proto: "{{ item.proto }}"
      loop:
        - { rule: "allow", port: "{{ ansible_port }}", proto: "tcp" }

- name: 3.5.1.4 Ensure ufw loopback traffic is configured
  block:
    - name: 3.5.1.4 Ensure ufw loopback traffic is configured | ingress lo allow in
      community.general.ufw:
        rule: allow
        direction: in
        interface: lo
    - name: 3.5.1.4 Ensure ufw loopback traffic is configured  | ingress deny from lo network ipv4
      community.general.ufw:
        rule: deny
        direction: in
        from: "127.0.0.0/8"

- name: 3.5.1.5 Ensure ufw outbound connections are configured
  ansible.builtin.command: "ufw allow out on all"
  changed_when: false

- name: 3.5.1.7 Ensure ufw default deny firewall policy
  block:
    - name: 3.5.1.7 Ensure ufw default deny firewall policy
      ansible.builtin.command: |
        ufw default deny incoming
        ufw default allow outgoing
        ufw default deny routed
        ufw logging on
      changed_when: false
    - name: Enable UFW
      community.general.ufw:
        state: enabled
