---
apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      serviceAccountName: {{ .Values.name }}
      {{- with .Values.securityContext }}
      securityContext:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Values.name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: {{ .Values.name }}
        - secretRef:
            name: {{ .Values.name }}
        {{- with .Values.resources }}
        resources:
        {{- toYaml . | nindent 10 }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.network.service_port_http }}
          name: http
          protocol: TCP
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - curl -G --silent --fail -u ${COUCHDB_USER}:${COUCHDB_PASSWORD} http://localhost:5984/_up
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - curl -G --silent --fail -u ${COUCHDB_USER}:${COUCHDB_PASSWORD} http://localhost:5984/_up
        volumeMounts:
        - name: data
          mountPath: /opt/couchdb/data
        - name: config
          mountPath: /opt/couchdb/etc/local.d/local.ini
          subPath: local.ini
      volumes:
      - name: data
        persistentVolumeClaim:
         claimName: {{ .Values.name }}
      - name: config
        configMap:
          name: {{ .Values.name }}-config
          items:
          - key: local.ini
            path: local.ini
