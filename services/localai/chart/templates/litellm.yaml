---
apiVersion: "apps/v1"
kind: Deployment
metadata:
  name: {{ .Values.name }}-litellm
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}-litellm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}-litellm
  template:
    metadata:
      labels:
        app: {{ .Values.name }}-litellm
    spec:
      serviceAccountName: {{ .Values.name }}
      {{- with .Values.securityContext }}
      securityContext:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Values.name }}-litellm
        image: {{ .Values.litellm.image.repository }}:{{ .Values.litellm.image.tag }}
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c", "while ! litellm --config /app/config.yaml --port 8000 --num_workers 6; do sleep 1; done"]
        envFrom:
        - configMapRef:
            name: {{ .Values.name }}-litellm
        - secretRef:
            name: {{ .Values.name }}-litellm
        ports:
        - containerPort: {{ .Values.network.litellm.http_port }}
          name: http
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /test
            port: {{ .Values.network.litellm.http_port }}
        readinessProbe:
          httpGet:
            path: /test
            port: {{ .Values.network.litellm.http_port }}
        volumeMounts:
        - name: config
          mountPath: "/app/config.yaml"
          subPath: config.yaml
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: {{ .Values.name }}-litellm-config
